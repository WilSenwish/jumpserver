# Generated by Django 3.1.6 on 2021-08-10 16:10

from django.conf import settings
from django.db import migrations, models, transaction
import django.db.models.deletion
import tickets.models.ticket
import uuid

ticket_assignee_m2m = list()


def get_ticket_assignee_m2m_info(apps, schema_editor):
    ticket_model = apps.get_model("tickets", "Ticket")
    for i in ticket_model.objects.only('id', 'assignees', 'action', 'created_by'):
        ticket_assignee_m2m.append((i.id, list(i.assignees.values_list('id', flat=True)), i.action, i.created_by))


def create_ticket_assignee_m2m_info(apps, schema_editor):
    ticket_assignee_model = apps.get_model("tickets", "TicketAssignee")
    creates = list()
    with transaction.atomic():
        for id, assignees, action, created_by in ticket_assignee_m2m:
            for assignee_id in assignees:
                creates.append(
                    ticket_assignee_model(
                        ticket_id=id, user_id=assignee_id, is_processor=True, action=action, created_by=created_by
                    )
                )
        ticket_assignee_model.objects.bulk_create(creates)


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tickets', '0009_auto_20210426_1720'),
    ]

    operations = [
        migrations.CreateModel(
            name='Template',
            fields=[
                ('org_id',
                 models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='Created by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('type', models.CharField(choices=[('general', 'General'), ('login_confirm', 'Login confirm'),
                                                   ('apply_asset', 'Apply for asset'),
                                                   ('apply_application', 'Apply for application'),
                                                   ('login_asset_confirm', 'Login asset confirm'),
                                                   ('command_confirm', 'Command confirm')], default='general',
                                          max_length=64, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Ticket template',
            },
        ),
        migrations.RunPython(get_ticket_assignee_m2m_info),
        migrations.RemoveField(
            model_name='ticket',
            name='action',
        ),
        migrations.RemoveField(
            model_name='ticket',
            name='assignees',
        ),
        migrations.RemoveField(
            model_name='ticket',
            name='assignees_display',
        ),
        migrations.RemoveField(
            model_name='ticket',
            name='processor',
        ),
        migrations.RemoveField(
            model_name='ticket',
            name='processor_display',
        ),
        migrations.AddField(
            model_name='ticket',
            name='approve_level',
            field=models.SmallIntegerField(default=1, verbose_name='Approve level'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='process',
            field=models.JSONField(default=list, encoder=tickets.models.ticket.ModelJSONFieldEncoder,
                                   verbose_name='Process'),
        ),
        migrations.CreateModel(
            name='TicketAssignee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='Created by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('approve_level', models.SmallIntegerField(choices=[(1, 'One level'), (2, 'Two level')], default=1,
                                                           verbose_name='Approve level')),
                ('is_processor', models.BooleanField(default=False)),
                ('action', models.CharField(
                    choices=[('open', 'Open'), ('approve', 'Approve'), ('reject', 'Reject'), ('close', 'Close')],
                    default='open', max_length=16, verbose_name='Action')),
                ('ticket',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='m2m_ticket_users',
                                   to='tickets.ticket', verbose_name='Ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='m2m_user_tickets',
                                           to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Ticket assignee',
            },
        ),
        migrations.RunPython(create_ticket_assignee_m2m_info),
        migrations.CreateModel(
            name='TemplateApprove',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='Created by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('approve_level', models.SmallIntegerField(choices=[(1, 'One level'), (2, 'Two level')], default=1,
                                                           verbose_name='Approve level')),
                ('approve_strategy', models.CharField(
                    choices=[('super', 'Super user'), ('super_admin', 'Super admin user'), ('all_user', 'All user')],
                    default='super_admin', max_length=64, verbose_name='Approve strategy')),
                ('assignees_display',
                 models.JSONField(default=list, encoder=tickets.models.ticket.ModelJSONFieldEncoder,
                                  verbose_name='Assignees display')),
                ('assignees',
                 models.ManyToManyField(related_name='assigned_template_approve', to=settings.AUTH_USER_MODEL,
                                        verbose_name='Assignees')),
                ('ticket_template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                                      related_name='templated_approves', to='tickets.template',
                                                      verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Ticket template approve level',
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='templated_tickets', to='tickets.template', verbose_name='Template'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='assignees',
            field=models.ManyToManyField(related_name='assigned_tickets', through='tickets.TicketAssignee',
                                         to=settings.AUTH_USER_MODEL, verbose_name='Assignees'),
        ),
    ]
